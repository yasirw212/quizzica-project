"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
var graphql_1 = require("graphql");
var GraphQL = require("graphql");
var path = require("path/posix");
var index_1 = require("./index");
var internalConsole_1 = require("./internalConsole");
var test = function () {
    (0, internalConsole_1.registerConsole)(console);
    var sourceGraphQLFilename = "./tests/assets/netlifyGraphOperationsLibrary.graphql";
    var schemaGraphQLFilename = "./tests/assets/netlifyGraphSchema.graphql";
    var sourceGraphQLFile = (0, fs_1.readFileSync)(sourceGraphQLFilename, "utf8");
    var schemaGraphQLFile = (0, fs_1.readFileSync)(schemaGraphQLFilename, "utf8");
    var schema = (0, graphql_1.buildASTSchema)((0, graphql_1.parse)(schemaGraphQLFile));
    var parsedDoc = (0, graphql_1.parse)(sourceGraphQLFile);
    var functions = index_1.NetlifyGraph.extractFunctionsFromOperationDoc(GraphQL, parsedDoc);
    console.log("functions:", functions);
    var netlifyGraphConfig = {
        netlifyGraphPath: ["..", "..", "lib", "netlifyGraph"],
        graphQLConfigJsonFilename: [".graphqlrc.json"],
        framework: "custom",
        webhookBasePath: "/api",
        functionsPath: [],
        graphQLOperationsSourceDirectory: ["..", "..", "lib", "netlifyGraph"],
        graphQLSchemaFilename: [
            "..",
            "..",
            "lib",
            "netlifyGraph",
            "netlifyGraphSchema.graphql",
        ],
        netlifyGraphImplementationFilename: ["..", "..", "lib", "index.js"],
        netlifyGraphTypeDefinitionsFilename: ["..", "..", "lib", "index.d.ts"],
        netlifyGraphRequirePath: ["..", "..", "lib", "netlifyGraph"],
        extension: "ts",
        moduleType: "esm",
        language: "typescript",
        runtimeTargetEnv: "node",
    };
    var result = index_1.NetlifyGraph.generateHandlerSource({
        GraphQL: GraphQL,
        handlerOptions: {
            postHttpMethod: true,
            useClientAuth: true,
        },
        netlifyGraphConfig: netlifyGraphConfig,
        operationId: "5c7bb879-a810-4a7e-8aec-55d05fd9c172",
        operationsDoc: sourceGraphQLFile,
        schema: schema,
    });
    if (!result) {
        throw new Error("result is undefined");
    }
    var exportedFiles = result.exportedFiles;
    exportedFiles === null || exportedFiles === void 0 ? void 0 : exportedFiles.forEach(function (exportedFile) {
        var filename = exportedFile.kind === "NamedExportedFile"
            ? path.join.apply(path, exportedFile.name) : "default";
        var contentPath = "/tmp/" + filename + ".ts";
        console.log(contentPath + ":\n", exportedFile.content);
        (0, fs_1.writeFileSync)(contentPath, exportedFile.content);
    });
};
test();
//# sourceMappingURL=sanity.test.js.map